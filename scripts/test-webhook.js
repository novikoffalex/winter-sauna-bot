#!/usr/bin/env node

const axios = require('axios');

const WEBHOOK_URL = process.env.WEBHOOK_URL || 'http://localhost:3000/webhook';

async function testWebhook() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook...\n');

  // –¢–µ—Å—Ç 1: URL Verification
  console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ URL verification...');
  try {
    const response = await axios.post(WEBHOOK_URL, {
      type: 'url_verification',
      challenge: 'test-challenge-123'
    });
    
    if (response.data.challenge === 'test-challenge-123') {
      console.log('‚úÖ URL verification –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ');
    } else {
      console.log('‚ùå URL verification –Ω–µ –ø—Ä–æ—à–µ–ª');
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ URL verification:', error.message);
  }

  // –¢–µ—Å—Ç 2: Health Check
  console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health check...');
  try {
    const healthUrl = WEBHOOK_URL.replace('/webhook', '/health');
    const response = await axios.get(healthUrl);
    
    if (response.data.status === 'ok') {
      console.log('‚úÖ Health check –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ');
    } else {
      console.log('‚ùå Health check –Ω–µ –ø—Ä–æ—à–µ–ª');
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ health check:', error.message);
  }

  // –¢–µ—Å—Ç 3: Message Event
  console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ message event...');
  try {
    const messageEvent = {
      type: 'event_callback',
      event: {
        type: 'im.message.receive_v1',
        message: {
          message_id: 'test-message-123',
          chat_id: 'test-chat-123',
          message_type: 'text',
          content: '{"text":"–ü—Ä–∏–≤–µ—Ç, –±–æ—Ç!"}',
          mentions: []
        },
        sender: {
          sender_id: 'test-user-123',
          sender_type: 'user'
        }
      }
    };

    const response = await axios.post(WEBHOOK_URL, messageEvent);
    
    if (response.data.status === 'ok') {
      console.log('‚úÖ Message event –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    } else {
      console.log('‚ùå Message event –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ message event:', error.message);
  }

  console.log('\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
  testWebhook().catch(console.error);
}

module.exports = testWebhook;
