<?php
/**
 * ะกะตัะฒะธั ะปะพะบะฐะปะธะทะฐัะธะธ ะดะปั ะฑะพัะฐ Zima SPA Wellness
 */

class LocalizationService
{
    private $userLanguage;
    private $translations;
    private $zimaData;

    public function __construct($userLanguage = 'en')
    {
        $this->userLanguage = $this->detectLanguage($userLanguage);
        $this->loadTranslations();
        $this->loadZimaData();
    }

    /**
     * ะะฟัะตะดะตะปะตะฝะธะต ัะทัะบะฐ ะฟะพะปัะทะพะฒะฐัะตะปั
     */
    private function detectLanguage($userLanguage)
    {
        // ะัะปะธ ัะทัะบ ะฝะต ะฟะตัะตะดะฐะฝ, ะธัะฟะพะปัะทัะตะผ ะฐะฝะณะปะธะนัะบะธะน ะฟะพ ัะผะพะปัะฐะฝะธั
        if (empty($userLanguage)) {
            return 'en';
        }

        // ะัะพะฒะตััะตะผ ะฟะพะดะดะตัะถะธะฒะฐะตะผัะต ัะทัะบะธ
        $supportedLanguages = ['ru', 'en'];
        
        if (in_array($userLanguage, $supportedLanguages)) {
            return $userLanguage;
        }

        // ะัะปะธ ัะทัะบ ะฝะต ะฟะพะดะดะตัะถะธะฒะฐะตััั, ะฒะพะทะฒัะฐัะฐะตะผ ะฐะฝะณะปะธะนัะบะธะน
        return 'en';
    }

    /**
     * ะะฐะณััะทะบะฐ ะฟะตัะตะฒะพะดะพะฒ
     */
    private function loadTranslations()
    {
        $this->translations = [
            'ru' => [
                'welcome' => '๐งโโ๏ธ ะะพะฑัะพ ะฟะพะถะฐะปะพะฒะฐัั ะฒ Zima SPA Wellness!',
                'welcome_subtitle' => 'ะะฐั AI-ะฟะพะผะพัะฝะธะบ ะดะปั ะฑัะพะฝะธัะพะฒะฐะฝะธั ะธ ะบะพะฝััะปััะฐัะธะน',
                'services' => 'ะะฐัะธ ััะปัะณะธ',
                'booking' => 'ะัะพะฝะธัะพะฒะฐะฝะธะต',
                'prices' => 'ะฆะตะฝั',
                'contact' => 'ะะพะฝัะฐะบัั',
                'help' => 'ะะพะผะพัั',
                'location' => 'ะะตััะพะฟะพะปะพะถะตะฝะธะต',
                'working_hours' => 'ะัะตะผั ัะฐะฑะพัั',
                'phone' => 'ะขะตะปะตัะพะฝ',
                'email' => 'Email',
                'book_now' => 'ะะฐะฑัะพะฝะธัะพะฒะฐัั ัะตะนัะฐั',
                'view_services' => 'ะะพัะผะพััะตัั ััะปัะณะธ',
                'view_prices' => 'ะะพัะผะพััะตัั ัะตะฝั',
                'contact_info' => 'ะะพะฝัะฐะบัะฝะฐั ะธะฝัะพัะผะฐัะธั',
                'help_text' => 'ะกะฟัะฐะฒะบะฐ',
                'main_menu' => 'ะะปะฐะฒะฝะพะต ะผะตะฝั',
                'choose_service' => 'ะัะฑะตัะธัะต ััะปัะณั',
                'booking_form' => 'ะคะพัะผะฐ ะฑัะพะฝะธัะพะฒะฐะฝะธั',
                'booking_instructions' => 'ะะฝััััะบัะธะธ ะฟะพ ะฑัะพะฝะธัะพะฒะฐะฝะธั',
                'example' => 'ะฝะฐะฟัะธะผะตั',
                'tomorrow' => 'ะทะฐะฒััะฐ',
                'january_15' => '15 ัะฝะฒะฐัั',
                'if_needed' => 'ะฟัะธ ะฝะตะพะฑัะพะดะธะผะพััะธ',
                'write_info_next_message' => 'ะะฐะฟะธัะธัะต ะธะฝัะพัะผะฐัะธั ะฒ ัะปะตะดัััะตะผ ัะพะพะฑัะตะฝะธะธ',
                'unknown_action' => 'ะะตะธะทะฒะตััะฝะพะต ะดะตะนััะฒะธะต',
                'unknown_command' => 'ะะตะธะทะฒะตััะฝะฐั ะบะพะผะฐะฝะดะฐ',
                'use_help' => 'ะธัะฟะพะปัะทัะนัะต /help',
                'processing_error' => 'ะัะธะฑะบะฐ ะพะฑัะฐะฑะพัะบะธ',
                'date' => 'ะะฐัะฐ',
                'time' => 'ะัะตะผั',
                'guests' => 'ะะพะปะธัะตััะฒะพ ะณะพััะตะน',
                'additional_services' => 'ะะพะฟะพะปะฝะธัะตะปัะฝัะต ััะปัะณะธ',
                'price' => 'ะฆะตะฝะฐ',
                'duration' => 'ะะปะธัะตะปัะฝะพััั',
                'category' => 'ะะฐัะตะณะพัะธั',
                'description' => 'ะะฟะธัะฐะฝะธะต',
                'thb' => 'ะฑะฐั',
                'hour' => 'ัะฐั',
                'massage' => 'ะะฐััะฐะถ',
                'treatment' => 'ะะตัะตะฝะธะต',
                'spa' => 'ะกะะ',
                'wellness' => 'ะะตะปะฝะตั',
                'crypto_payment' => 'ะัะธะฟัะพะฟะปะฐัะตะถ',
                'pay_with_crypto' => 'ะะฟะปะฐัะธัั ะบัะธะฟัะพะฒะฐะปััะพะน',
                'select_payment_method' => 'ะัะฑะตัะธัะต ัะฟะพัะพะฑ ะพะฟะปะฐัั',
                'ticket_created' => 'ะะธะปะตั ัะพะทะดะฐะฝ',
                'ticket_id' => 'ID ะฑะธะปะตัะฐ',
                'service' => 'ะฃัะปัะณะฐ',
                'amount' => 'ะกัะผะผะฐ',
                'expires_at' => 'ะะตะนััะฒัะตั ะดะพ',
                'how_to_use' => 'ะะฐะบ ะธัะฟะพะปัะทะพะฒะฐัั',
                'show_qr_at_entrance' => 'ะะพะบะฐะถะธัะต QR-ะบะพะด ะฝะฐ ะฒัะพะดะต',
                'scan_qr_code' => 'ะััะบะฐะฝะธััะนัะต QR-ะบะพะด',
                'enjoy_service' => 'ะะฐัะปะฐะถะดะฐะนัะตัั ััะปัะณะพะน',
                'ticket_valid_24h' => 'ะะธะปะตั ะดะตะนััะฒะธัะตะปะตะฝ 24 ัะฐัะฐ',
                'open_payment' => 'ะัะบัััั ะพะฟะปะฐัั',
                'mark_paid_test' => 'ะัะผะตัะธัั ะบะฐะบ ะพะฟะปะฐัะตะฝะพ (ัะตัั)',
                'open_ticket' => 'ะัะบัััั ะฑะธะปะตั',
                'view_ticket_online' => 'ะะพัะผะพััะตัั ะฑะธะปะตั ะพะฝะปะฐะนะฝ',
                'ticket_details' => 'ะะตัะฐะปะธ ะฑะธะปะตัะฐ',
                'access_code' => 'ะะพะด ะดะพัััะฟะฐ',
                'if_questions_contact' => 'ะัะปะธ ะตััั ะฒะพะฟัะพัั, ะพะฑัะฐัะฐะนัะตัั ะบ ะฝะฐะผ!',
                'payment_success' => 'ะะฟะปะฐัะฐ ะฟัะพัะปะฐ ััะฟะตัะฝะพ!',
                'payment_failed' => 'ะัะธะฑะบะฐ ะพะฟะปะฐัั',
                    'crypto_currencies' => 'ะัะธะฟัะพะฒะฐะปััั',
                    'usdt' => 'USDT',
                    'btc' => 'Bitcoin',
                    'eth' => 'Ethereum',
                    'processing_voice' => 'ะะฑัะฐะฑะฐััะฒะฐั ะณะพะปะพัะพะฒะพะต ัะพะพะฑัะตะฝะธะต',
                    'transcription' => 'ะขัะฐะฝัะบัะธะฟัะธั',
                    'transcription_failed' => 'ะะต ัะดะฐะปะพัั ัะฐัะฟะพะทะฝะฐัั ัะตัั',
                    'voice_processing_error' => 'ะัะธะฑะบะฐ ะพะฑัะฐะฑะพัะบะธ ะณะพะปะพัะพะฒะพะณะพ ัะพะพะฑัะตะฝะธั',
                    'confirm_booking' => 'ะะพะดัะฒะตัะดะธัั ะฑัะพะฝะธัะพะฒะฐะฝะธะต',
                    'edit_booking' => 'ะะทะผะตะฝะธัั ะฑัะพะฝะธัะพะฒะฐะฝะธะต',
                    'cancel_booking' => 'ะัะผะตะฝะธัั ะฑัะพะฝะธัะพะฒะฐะฝะธะต',
                    'voice_booking' => 'ะะพะปะพัะพะฒะพะต ะฑัะพะฝะธัะพะฒะฐะฝะธะต',
                    'speak_booking' => 'ะัะพััะพ ัะบะฐะถะธัะต, ััะพ ัะพัะธัะต ะทะฐะฑัะพะฝะธัะพะฒะฐัั',
                    'voice_instructions' => 'ะะฐะฟัะธะผะตั: "ะฅะพัั ะทะฐะฟะธัะฐัััั ะฝะฐ ะผะฐััะฐะถ ะทะฐะฒััะฐ ะฒ 14:00 ะฝะฐ 2 ัะตะปะพะฒะตะบ"',
                    'just_send_voice' => 'ะัะพััะพ ะพัะฟัะฐะฒััะต ะณะพะปะพัะพะฒะพะต ัะพะพะฑัะตะฝะธะต',
                    'booking_confirmed' => 'ะัะพะฝะธัะพะฒะฐะฝะธะต ะฟะพะดัะฒะตัะถะดะตะฝะพ',
                    'booking_details_sent' => 'ะะตัะฐะปะธ ะฑัะพะฝะธัะพะฒะฐะฝะธั ะพัะฟัะฐะฒะปะตะฝั',
                    'booking_cancelled' => 'ะัะพะฝะธัะพะฒะฐะฝะธะต ะพัะผะตะฝะตะฝะพ',
                    'can_book_again' => 'ะะพะถะตัะต ะทะฐะฑัะพะฝะธัะพะฒะฐัั ัะฝะพะฒะฐ',
                    'send_new_voice' => 'ะัะฟัะฐะฒััะต ะฝะพะฒะพะต ะณะพะปะพัะพะฒะพะต ัะพะพะฑัะตะฝะธะต ั ะธะทะผะตะฝะตะฝะธัะผะธ',
                    'booking_data_not_found' => 'ะะฐะฝะฝัะต ะฑัะพะฝะธัะพะฒะฐะฝะธั ะฝะต ะฝะฐะนะดะตะฝั',
                    'data_not_found' => 'ะะฐะฝะฝัะต ะฝะต ะฝะฐะนะดะตะฝั',
                    'service_not_found' => 'ะฃัะปัะณะฐ ะฝะต ะฝะฐะนะดะตะฝะฐ'
            ],
            'en' => [
                'welcome' => '๐งโโ๏ธ Welcome to Zima SPA Wellness!',
                'welcome_subtitle' => 'Your AI assistant for booking and consultations',
                'services' => 'Our Services',
                'booking' => 'Booking',
                'prices' => 'Prices',
                'contact' => 'Contact',
                'help' => 'Help',
                'location' => 'Location',
                'working_hours' => 'Working Hours',
                'phone' => 'Phone',
                'email' => 'Email',
                'book_now' => 'Book Now',
                'view_services' => 'View Services',
                'view_prices' => 'View Prices',
                'contact_info' => 'Contact Information',
                'help_text' => 'Help',
                'main_menu' => 'Main Menu',
                'choose_service' => 'Choose Service',
                'booking_form' => 'Booking Form',
                'booking_instructions' => 'Booking instructions',
                'example' => 'example',
                'tomorrow' => 'tomorrow',
                'january_15' => 'January 15',
                'if_needed' => 'if needed',
                'write_info_next_message' => 'Write the information in the next message',
                'unknown_action' => 'Unknown action',
                'unknown_command' => 'Unknown command',
                'use_help' => 'use /help',
                'processing_error' => 'Processing error',
                'date' => 'Date',
                'time' => 'Time',
                'guests' => 'Number of Guests',
                'additional_services' => 'Additional Services',
                'price' => 'Price',
                'duration' => 'Duration',
                'category' => 'Category',
                'description' => 'Description',
                'thb' => 'THB',
                'hour' => 'hour',
                'massage' => 'Massage',
                'treatment' => 'Treatment',
                'spa' => 'SPA',
                'wellness' => 'Wellness',
                'crypto_payment' => 'Crypto Payment',
                'pay_with_crypto' => 'Pay with Crypto',
                'select_payment_method' => 'Select Payment Method',
                'ticket_created' => 'Ticket Created',
                'ticket_id' => 'Ticket ID',
                'service' => 'Service',
                'amount' => 'Amount',
                'expires_at' => 'Expires At',
                'how_to_use' => 'How to Use',
                'show_qr_at_entrance' => 'Show QR code at entrance',
                'scan_qr_code' => 'Scan QR code',
                'enjoy_service' => 'Enjoy your service',
                'ticket_valid_24h' => 'Ticket valid for 24 hours',
                'open_payment' => 'Open Payment',
                'mark_paid_test' => 'Mark as Paid (test)',
                'open_ticket' => 'Open Ticket',
                'view_ticket_online' => 'View Ticket Online',
                'ticket_details' => 'Ticket Details',
                'access_code' => 'Access Code',
                'if_questions_contact' => 'If you have questions, contact us!',
                'payment_success' => 'Payment successful!',
                'payment_failed' => 'Payment failed',
                    'crypto_currencies' => 'Cryptocurrencies',
                    'usdt' => 'USDT',
                    'btc' => 'Bitcoin',
                    'eth' => 'Ethereum',
                    'processing_voice' => 'Processing voice message',
                    'transcription' => 'Transcription',
                    'transcription_failed' => 'Failed to recognize speech',
                    'voice_processing_error' => 'Voice message processing error',
                    'confirm_booking' => 'Confirm Booking',
                    'edit_booking' => 'Edit Booking',
                    'cancel_booking' => 'Cancel Booking',
                    'voice_booking' => 'Voice Booking',
                    'speak_booking' => 'Just say what you want to book',
                    'voice_instructions' => 'For example: "I want to book a massage for tomorrow at 2 PM for 2 people"',
                    'just_send_voice' => 'Just send a voice message',
                    'booking_confirmed' => 'Booking confirmed',
                    'booking_details_sent' => 'Booking details sent',
                    'booking_cancelled' => 'Booking cancelled',
                    'can_book_again' => 'You can book again',
                    'send_new_voice' => 'Send a new voice message with changes',
                    'booking_data_not_found' => 'Booking data not found',
                    'data_not_found' => 'Data not found',
                    'service_not_found' => 'Service not found'
            ]
        ];
    }

    /**
     * ะะฐะณััะทะบะฐ ะดะฐะฝะฝัั Zima
     */
    private function loadZimaData()
    {
        if (file_exists('zima_data.json')) {
            $this->zimaData = json_decode(file_get_contents('zima_data.json'), true);
        } else {
            $this->zimaData = [
                'name' => 'Zima SPA Wellness',
                'short_name' => 'Zima',
                'location' => '83/14 Moo 2, Wiset Rd, Rawai, Phuket 83100, Thailand',
                'phone' => '+66 81 234 5678',
                'email' => 'info@zimaspawellness.com',
                'working_hours' => '10:00-22:00',
                'services' => []
            ];
        }
    }

    /**
     * ะะพะปััะตะฝะธะต ะฟะตัะตะฒะพะดะฐ
     */
    public function t($key, $params = [])
    {
        // ะัะฟะพะปัะทัะตะผ ะตะดะธะฝัะน ะธััะพัะฝะธะบ ะฟะตัะตะฒะพะดะพะฒ ั fallback ะฝะฐ EN
        $translation = $this->translations[$this->userLanguage][$key]
            ?? $this->translations['en'][$key]
            ?? $key;

        // ะะฐะผะตะฝะฐ ะฟะฐัะฐะผะตััะพะฒ ะฒ ะฟะตัะตะฒะพะดะต
        foreach ($params as $param => $value) {
            $translation = str_replace('{' . $param . '}', $value, $translation);
        }

        return $translation;
    }

    /**
     * ะะพะปััะตะฝะธะต ะดะฐะฝะฝัั Zima ะฝะฐ ัะตะบััะตะผ ัะทัะบะต
     */
    public function getZimaData()
    {
        $data = $this->zimaData;
        
        // ะะพะบะฐะปะธะทะฐัะธั ััะปัะณ
        if (isset($data['services'])) {
            foreach ($data['services'] as &$service) {
                $service['name'] = $service['name_' . $this->userLanguage] ?? $service['name_ru'];
                $service['description'] = $service['description_' . $this->userLanguage] ?? $service['description_ru'];
            }
        }
        
        return $data;
    }

    /**
     * ะะพะปััะตะฝะธะต AI ะฟัะพะผะฟัะฐ ะฝะฐ ัะตะบััะตะผ ัะทัะบะต
     */
    public function getAIPrompt()
    {
        if (file_exists('ai_prompts.json')) {
            $prompts = json_decode(file_get_contents('ai_prompts.json'), true);
            return $prompts[$this->userLanguage] ?? $prompts['ru'];
        }
        
        return "You are an AI assistant for Zima SPA Wellness in Phuket, Thailand.";
    }

    /**
     * ะะพะปััะตะฝะธะต ัะทัะบะฐ ะฟะพะปัะทะพะฒะฐัะตะปั
     */
    public function getLanguage()
    {
        return $this->userLanguage;
    }

    /**
     * ะฃััะฐะฝะพะฒะบะฐ ัะทัะบะฐ ะฟะพะปัะทะพะฒะฐัะตะปั
     */
    public function setLanguage($language)
    {
        $this->userLanguage = $this->detectLanguage($language);
    }

    /**
     * ะะพะปััะตะฝะธะต ััะปัะณ ะฟะพ ะบะฐัะตะณะพัะธะธ
     */
    public function getServicesByCategory($category = null)
    {
        $data = $this->getZimaData();
        $services = $data['services'] ?? [];
        
        if ($category) {
            $services = array_filter($services, function($service) use ($category) {
                return $service['category'] === $category;
            });
        }
        
        return $services;
    }

    /**
     * ะคะพัะผะฐัะธัะพะฒะฐะฝะธะต ัะตะฝั
     */
    public function formatPrice($price, $currency = 'THB')
    {
        if ($this->userLanguage === 'ru') {
            return $price . ' ' . $this->t('thb');
        } else {
            return $currency . ' ' . $price;
        }
    }

    /**
     * ะะพะปััะตะฝะธะต ะฟัะธะฒะตัััะฒะตะฝะฝะพะณะพ ัะพะพะฑัะตะฝะธั
     */
    public function getWelcomeMessage()
    {
        $data = $this->getZimaData();
        
        $message = $this->t('welcome') . "\n\n";
        $message .= $this->t('welcome_subtitle') . "\n\n";
        $message .= "๐ " . $this->t('location') . ": " . $data['location'] . "\n";
        $message .= "๐ " . $this->t('working_hours') . ": " . $data['working_hours'] . "\n";
        $message .= "๐ " . $this->t('phone') . ": " . $data['phone'] . "\n\n";
        $message .= $this->t('choose_service') . ":";
        
        return $message;
    }

    /**
     * ะะพะปััะตะฝะธะต ัะพะพะฑัะตะฝะธั ั ััะปัะณะฐะผะธ
     */
    public function getServicesMessage()
    {
        $services = $this->getServicesByCategory();
        $message = "๐โโ๏ธ " . $this->t('services') . ":\n\n";
        
        foreach ($services as $index => $service) {
            $message .= ($index + 1) . ". **{$service['name']}**\n";
            $message .= "   ๐ฐ " . $this->t('price') . ": " . $this->formatPrice($service['price']) . "\n";
            $message .= "   โฑ๏ธ " . $this->t('duration') . ": {$service['duration']}\n";
            $message .= "   ๐ {$service['description']}\n\n";
        }
        
        return $message;
    }

    /**
     * ะะพะปััะตะฝะธะต ัะพะพะฑัะตะฝะธั ั ัะตะฝะฐะผะธ
     */
    public function getPricesMessage()
    {
        $services = $this->getServicesByCategory();
        $message = "๐ฐ " . $this->t('prices') . ":\n\n";
        
        // ะััะฟะฟะธััะตะผ ะฟะพ ะบะฐัะตะณะพัะธัะผ
        $categories = [];
        foreach ($services as $service) {
            $category = $service['category'];
            if (!isset($categories[$category])) {
                $categories[$category] = [];
            }
            $categories[$category][] = $service;
        }
        
        foreach ($categories as $category => $categoryServices) {
            $message .= "**" . $this->t($category) . ":**\n";
            foreach ($categoryServices as $service) {
                $message .= "โข {$service['name']}: " . $this->formatPrice($service['price']) . "\n";
            }
            $message .= "\n";
        }
        
        return $message;
    }
    
    // ะฃะะะะะะ: ะดัะฑะปะธััััะธะนัั ะผะตัะพะด t() (ะพะฑัะตะดะธะฝะตะฝะพ ะฒััะต)
}
